#version 460

in vec3 TexCoord;
in vec4 Diffuse;
in vec4 Specular;
in vec3 Normal;
in vec3 FragmentPosition;

out vec4 FragColor;

struct Light {
    vec3 position;
    vec3 ambient;
    vec3 diffuse;
    vec3 specular;
};

struct PointLight {
    vec3 position;
    vec3 ambient;
    vec3 diffuse;
    vec3 specular;
	float constant;
	float linear;
	float quadratic;
};
struct SpotLight {
    vec3 position;
	vec3 direction;
    vec3 ambient;
    vec3 diffuse;
    vec3 specular;
	float cutOff;
	float outerCutOff;
};

uniform Light light; 
uniform PointLight pointLight;
uniform SpotLight spotLight;
uniform sampler2D atlas[10];

void main()
{
	
	//----------------------------------------------------------------------------------------------------------------------initial setup
	vec3 spriteColor = vec3(Diffuse);
	vec3 normal = normalize(Normal);
	vec3 viewDirection = normalize(vec3(0,0,-1));
	vec3 lightDirection = normalize(spotLight.position - FragmentPosition);
	
	//----------------------------------------------------------------------------------------------------------------------ambient
    vec3 ambient = spotLight.ambient* spriteColor ;
	
		
	//----------------------------------------------------------------------------------------------------------------------angle calculations
	float theta = dot(lightDirection, normalize(-spotLight.direction));
	float epsilon = spotLight.cutOff - spotLight.outerCutOff;
	float intensity = clamp((theta - spotLight.outerCutOff)/epsilon, 0.0,1.0);
		
	//----------------------------------------------------------------------------------------------------------------------diffuse
	float diff = max(dot(normal, lightDirection), 0.0);
	vec3 diffuse = diff * spriteColor  * spotLight.diffuse * intensity;

	//----------------------------------------------------------------------------------------------------------------------specular
	vec3 reflectionDirection = reflect(-lightDirection, normal);
	float specularStrength = pow(max(dot(viewDirection, reflectionDirection),0.0),Specular.w);
	vec3 specular = spotLight.specular * (specularStrength * vec3(Specular)) * intensity ;

	//----------------------------------------------------------------------------------------------------------------------result
	FragColor =  texture(atlas[int(floor(TexCoord.z))],vec2(TexCoord.x,TexCoord.y)) * vec4((ambient + diffuse + specular), Diffuse.w);

	
} 